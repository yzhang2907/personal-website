// colors
$card-background: #F7F9F9;     // blueish offwhite
$background: #ffffff;     // WHITE!!!
$primary: #BED8D4;        // mint-turqoise-teal-thing
$primary-lighter: #cfe3e0; // lighter primary for card backgrounds
$link: #e6f6f3;           // lighter, greener mint-turqoise-teal-thing
// $accent: #E77375;         // salmon
$accent: #586BA4;
// $text: #2D3047;           // deep space blue
$text: #211A1E;           // off-black
$text-subtitle: #475B5A;  // spoiled guacamole
// media query breakpoints
$breakpoints: ( 
  'small':  (max-width: 425px),
  'medium': ((max-width: 750px) and (min-width: 425.01px)),
  'large':  (min-width: 750.01px),
  'medlarge': (min-width: 425.01px)
) !default;

// Roboto, we will make this local later
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700;900&family=Roboto+Mono&family=Roboto+Slab&family=Roboto:wght@400;500&display=swap');

@mixin break($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@function large-prop($ratio) {
  @return calc(min(900px, 90vw) * $ratio);
}

// sets values of property to small, med and large according to
// media breakpoints
@mixin set-bp-values($property, $small, $med, $large) {
  @media #{inspect(map-get($breakpoints, 'small'))} {
      #{$property}: $small;
  }
  @media #{inspect(map-get($breakpoints, 'medium'))} {
      #{$property}: $med;
  }
  @media #{inspect(map-get($breakpoints, 'large'))} {
      #{$property}: $large;
  }
}

* {
  font-size: 16px;
  font-family: Roboto;
  background-color: $background;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: $text;
}
a {
  // text-decoration: underline $text;
  text-decoration: none;
  background-color: $link;
  // background-color: inherit;
  color: $text-subtitle;
  font-weight: 500;
}

a:hover {
  background-color: $primary;
}

#root {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: center;
}

.container {
  margin: auto 0px;
  padding: 0px;
  
  // border-left: 1px solid lightblue;
  // border-right: 1px solid lightblue;

  @include set-bp-values('width', 90vw, 90vw, large-prop(1))
}

.title {
  // text-align: center;
  // @include set-bp-values('padding', 0 10px, 0 30px, 0 50px);
  // display: inline;
  @include set-bp-values('text-align', center, left, left);
  @include set-bp-values('font-size', 15vw, 12vw, large-prop(0.15));
  @include set-bp-values('margin', 10vw 0 5vw, 8vw 0 4vw, large-prop(0.10) 0 large-prop(0.04));
  
  font-family: Montserrat;
  font-weight: 900;
  
  background-image: linear-gradient(#fff 70%, $primary 55%);
}

.header {
  @include set-bp-values('margin-bottom', 5vw, 4vw, large-prop(0.04));
}

.header span {
  font-family: Montserrat;
  @include set-bp-values('font-size', 8vw, 4vw, large-prop(0.05));
  // background-image: linear-gradient(#fff 70%, $primary 55%);
}

.intro {
  @include set-bp-values('text-align', center, left, left);
  @include set-bp-values('font-size', 5vw, 3vw, large-prop(0.03));
  // @include set-bp-values('padding', 0 10px, 0 30px, 0 50px);
  @include set-bp-values('margin-bottom', 4vw, 3vw, large-prop(0.03));
  color: $text-subtitle;
  font-family: Roboto Mono;
}


.contacts {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  @include set-bp-values('margin-bottom', 5vw, 4vw, large-prop(0.04));
}

.contact {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 10%;
  @include set-bp-values('font-size', 16px, 20px, 22px);
  @include set-bp-values('padding', 0 10px, 0 30px, 0 50px);
}

.contact-icon > a {
  // background-color: $primary;
  background-color: inherit;
}

.contact-icon > a > img {
  // background-color: $primary;
  display: inline-block;
  @include set-bp-values('height', 20px, 20px, 30px);
  @include set-bp-values('width', 20px, 20px, 30px);
  margin-right: 10px;
}

.contact-name {
  display: inline-block;
  font-size: inherit;
}

.big-cards, .small-cards {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  @include set-bp-values('margin-bottom', 5vw, 4vw, large-prop(0.04));
  
}

$bc-radius: 0px;
$bc-rounded-top: $bc-radius $bc-radius 0px 0px;
$bc-rounded-bottom: 0px 0px $bc-radius $bc-radius;
$card-shadow: $primary-lighter;
$deviation: 10px;
$fuzzy: 1px;

.big-card {
  border-radius: $bc-radius;
  background-color: $card-background;
  height: auto;
  @include set-bp-values('width', 95%, 95%, 48%);
  @include set-bp-values('margin', 10px, 15px, 15px 0px);
  -moz-box-shadow: $deviation $deviation $fuzzy $card-shadow;
  -webkit-box-shadow: $deviation $deviation $fuzzy $card-shadow;
  box-shadow: $deviation $deviation $fuzzy $card-shadow;
}

.big-card img {
  border-radius: $bc-rounded-top;
  width: 100%;
}
.big-card-text-container {
  background-color: inherit;
  border-radius: $bc-rounded-bottom;
  @include set-bp-values('padding', 5px, 5px, 15px 5px);
}

.big-card-title {
  background-color: inherit;
  font-family: Montserrat;
  font-weight: 400;
  @include set-bp-values('font-size', 20px, 22px, 24px);
  @include set-bp-values('padding', 5px 5px, 5px 10px, 5px 15px);
}

.big-card-subtitle {
  background-color: inherit;
  @include set-bp-values('padding', 3px 3px, 3px 10px, 3px 15px);
  // font-family: Montserrat;
  font-style: italic;
}

.big-card-desc {
  background-color: inherit;
  border-radius: $bc-rounded-bottom;
  // @include set-bp-values('padding', 5px 10px, 5px 15px, 5px 20px);
  @include set-bp-values('margin', 5px 5px, 5px 10px, 5px 15px);
}

$sc-radius: 5px;
$sc-rounded-top: $sc-radius $sc-radius 0px 0px;
$sc-rounded-bottom: 0px 0px $sc-radius $sc-radius;

.small-card {
  border-radius: $sc-radius;
  background: inherit;
  height: auto;
  @include set-bp-values('width', 45%, 45%, 22.5%);
}

.small-card img {
  width: 100%;
  border-radius: $sc-rounded-top;
}

.small-card-text-container {
  border-radius: $sc-rounded-bottom;
  @include set-bp-values('padding', 5px, 5px, 10px);
}

.small-card-title {
  @include set-bp-values('font-size', 20px, 22px, 24px);
  @include set-bp-values('padding', 5px 5px, 5px 10px, 5px 15px);
}

.small-card-desc {
  border-radius: $sc-rounded-bottom;
  @include set-bp-values('padding', 5px 5px, 5px 10px, 5px 15px);
}

.skills {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
}

.skill {
  @include set-bp-values('width', 100%, 100%, 48%);
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  height: 44px;
}
.skill-title {
  flex-grow: 0;
  flex-shrink: 0;
  @include set-bp-values('flex-basis', 85px, 90px, 100px);
  @include set-bp-values('font-size', 18px, 18px, large-prop(0.02));
}
.skill-level {
  flex-grow: 0;
  flex-shrink: 1;
  margin-left: 10px;
  @include set-bp-values('flex-basis', 220px, 220px, 220px);
  height: 100%;
}

.skill-bar {
  width: 100%;
}

.footer {
  color: $text-subtitle;
  font-size: 12px;
  @include set-bp-values('margin', 15vw 0 5vw, 12vw 0 4vw, large-prop(0.15) 0 large-prop(0.04));
}